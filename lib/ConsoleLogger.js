// Generated by CoffeeScript 1.10.0
(function() {
  var Observatory, ref,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Observatory = (ref = this.Observatory) != null ? ref : {};

  Observatory.ConsoleLogger = (function(superClass) {
    extend(ConsoleLogger, superClass);

    function ConsoleLogger() {
      return ConsoleLogger.__super__.constructor.apply(this, arguments);
    }

    ConsoleLogger.prototype.log = function(m) {
      return console.log(this.formatter(m));
    };

    ConsoleLogger.prototype.addMessage = function(message, useBuffer) {
      if (!this.messageAcceptable(message)) {
        throw new Error("Unacceptable message format in logger: " + this.name);
      }
      return this.log(message);
    };

    return ConsoleLogger;

  })(Observatory.Logger);

  (typeof exports !== "undefined" && exports !== null ? exports : this).Observatory = Observatory;

}).call(this);
